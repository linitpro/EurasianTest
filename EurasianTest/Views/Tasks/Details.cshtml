@using EurasianTest.Core.Components.DictionaryComponents.GetUsersDictionaryComponent.Models
@using EurasianTest.Core.Components.DictionaryComponents.GetProjectsDictionaryComponent.Models
@using _TaskStatus = EurasianTest.DAL.Entities.Enums.TaskStatus
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@inject EurasianTest.Core.Infrastructure.IAuthContext auth
@model EurasianTest.Core.Components.GetTaskDetailsComponent.Models.GetTaskDetailsViewModel
<h1>Задача #@Model.Id</h1>

<div class="card-group">
    <div class="card">
        <div class="card-body">
            @if (auth.CurrentUser.Role == EurasianTest.DAL.Entities.Enums.Role.User)
{
                <div>
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    <b>
                                        Название
                                    </b>
                                </td>
                                <td>@Model.Name</td>
                            </tr>
                            <tr>
                                <td>
                                    <b>
                                        Описание
                                    </b>
                                </td>
                                <td>
                                    @Model.Description
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>
                                        Дата начала
                                    </b>
                                </td>
                                <td>
                                    @Model.Started.ToShortDateString()
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>
                                        Дата завершения
                                    </b>
                                </td>
                                <td>
                                    @Model.Expired.ToShortDateString()
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
}
else
{
                <form asp-action="Update" method="post" class="">
                    <input hidden asp-for="Id" />
                    <div class="form-group">
                        <label>Название</label>
                        <input asp-for="Name" type="text" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Описание</label>
                        <input asp-for="Description" type="text" class="form-control" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Дата начала</label>
                        <input asp-for="Started" type="text" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Дата завершения</label>
                        <input asp-for="Expired" type="text" class="form-control" />
                    </div>
                    <button type="submit" class="btn btn-outline-success">Сохранить</button>
                </form>
}
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <form asp-action="UpdateStatus" method="post" class="">
                <input hidden asp-for="Id" />
                <div class="form-group">
                    <label>Статус</label>
                    <select asp-for="Status" asp-items="@Html.GetEnumSelectList<_TaskStatus>()" class="form-control"></select>
                </div>
                <div class="form-group">
                    <label>Назначено на...</label>
                    <select asp-for="UserId" asp-items="@(new SelectList(Model.Users, nameof(UserViewModel.UserId), nameof(UserViewModel.Email)))" class="form-control"></select>
                </div>
                <button type="submit" class="btn btn-outline-success">Сохранить</button>
            </form>
        </div>
    </div>
</div>

@if (auth.CurrentUser.Role != EurasianTest.DAL.Entities.Enums.Role.User)
{
    <div class="card-group">
        <div class="card">
            <div class="card-body">
                <form asp-controller="Tasks" asp-action="Delete" method="post">
                    <input hidden asp-for="Id" />
                    <button class="btn btn-danger" type="submit">Удалить</button>
                </form>
            </div>
        </div>
    </div>
}

<script>
    window.onload = function () {
        @* Обработчик ошибок валидации 

        @{ var errorsContainer = EurasianTest.Code.ValidationHelper._ValidationHelper.GetErrors(TempData); }
        var errorContainer = {
            ElementId: '@errorsContainer.ElementId', Errors: [
                @foreach (var item in errorsContainer.Errors)
                {
                    @($"{{ ElementId: '#{item.ElementId}', ErrorMessage: '{item.ErrorMessage}', 'IncorrectValue': {item.IncorrectValue ?? "" } }},");
                }
            ]
        };



        if (errorContainer != null) {
            errorContainer.Errors.forEach(function (element) {
                console.log('#' + errorContainer.ElementId);
                console.log(element.IncorrectValue);
                $('#' + errorContainer.ElementId).children('#' + element.ElementId).val(element.IncorrectValue);
            });
        }*@
    }
</script>